{"version":3,"file":"main.573dccad265fff7908d2.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAEA;AACA;AACA;AACA;AACA;AAHA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClCA;AACA;AACA;;;AAcA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;;AACA;AACA;AAAA;AAAA;AAAA;AACA;;AACA;AACA;;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA5BA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAoCA;;AAlDA;;AAAA;AAoDA","sources":["webpack://cra-ts/./src/stories/loginForm/LoginFrom.stories.tsx","webpack://cra-ts/./src/stories/loginForm/LoginForm.tsx"],"sourcesContent":["\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from 'react';\\nimport { ComponentStory, ComponentMeta } from '@storybook/react';\\nimport { LoginForm } from '../loginForm/LoginForm';\\n\\n\\nexport default {\\n  /* ðŸ‘‡ The title prop is optional.\\n  * See https://storybook.js.org/docs/react/configure/overview#configure-story-loading\\n  * to learn how to generate automatic titles\\n  */\\n  title: 'LoginForm',\\n  component: LoginForm,\\n} as ComponentMeta<typeof LoginForm>;\\n\\nconst Template: ComponentStory<typeof LoginForm> = (args) => <LoginForm {...args} />;\\n\\nexport const Filled = Template.bind({});\\nFilled.args = {\\n  label: 'Name',\\n  name: 'Seu nome aqui',\\n  submitted: false \\n};\\n\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Filled\":{\"startLoc\":{\"col\":51,\"line\":15},\"endLoc\":{\"col\":84,\"line\":15},\"startBody\":{\"col\":51,\"line\":15},\"endBody\":{\"col\":84,\"line\":15}}};\n    \nimport React from 'react';\nimport { ComponentStory, ComponentMeta } from '@storybook/react';\nimport { LoginForm } from '../loginForm/LoginForm';\n\n\nexport default {\n  /* ðŸ‘‡ The title prop is optional.\n  * See https://storybook.js.org/docs/react/configure/overview#configure-story-loading\n  * to learn how to generate automatic titles\n  */\n  title: 'LoginForm',\n  component: LoginForm,\n} as ComponentMeta<typeof LoginForm>;\n\nconst Template: ComponentStory<typeof LoginForm> = (args) => <LoginForm {...args} />;\n\nexport const Filled = Template.bind({});\nFilled.args = {\n  label: 'Name',\n  name: 'Seu nome aqui',\n  submitted: false \n};\n\n\n\n\nFilled.parameters = { storySource: { source: \"(args) => <LoginForm {...args} />\" }, ...Filled.parameters };","import React, { useState } from 'react';\nimport Button from '../button/Button';\nimport InputField from '../input/InputField';\n\ninterface LoginFormProps {\n  onLogin: ({\n    username,\n    password,\n  }: {\n    username: string;\n    password: string;\n  }) => void;\n  title?: string;\n  errorMessage?: string;\n}\n\nconst LoginForm: React.FC<LoginFormProps> = ({ onLogin, title = 'Log In', errorMessage }) => {\n  const [submitted, setSubmitted] = useState(false);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleFormSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    if (username && password) {\n      onLogin({ username, password });\n    }\n    setSubmitted(true);\n  };\n\n  return (\n    <div className=\"max-w-screen-sm p-12 mx-auto bg-gray-50 rounded-md shadow-lg\">\n      <form className=\"flex flex-col\" onSubmit={handleFormSubmit}>\n        <fieldset>\n          <legend className=\"text-3xl text-gray-800 mb-4\">{title}</legend>\n          <InputField\n            name=\"username\"\n            type=\"text\"\n            label=\"Username\"\n            submitted={submitted}\n            requiredMessage=\"Username is required\"\n            onChange={(e) => setUsername(e.target.value)}\n            value={username}\n            autoComplete=\"username\"\n          />\n          <InputField\n            name=\"password\"\n            type=\"password\"\n            label=\"Password\"\n            submitted={submitted}\n            requiredMessage=\"Password is required\"\n            onChange={(e) => setPassword(e.target.value)}\n            value={password}\n            autoComplete=\"current-password\"\n          />\n          <Button \n          primary\n          label='LoginForm Button'\n          size = 'medium'        \n          />\n          {errorMessage && (\n            <div className=\"text-red-500 mt-2\">{errorMessage}</div>\n          )}\n        </fieldset>\n      </form>\n    </div>\n  );\n};\n\nexport default LoginForm;\n"],"names":[],"sourceRoot":""}