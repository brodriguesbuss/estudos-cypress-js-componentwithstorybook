{"version":3,"file":"main.cad07b7bb39566c57c10.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;;;AAgBA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;;AACA;AACA;AAAA;AAAA;AAAA;AACA;;AACA;AACA;;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA/BA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAwCA;;AAtDA;;AAAA;AAyDA","sources":["webpack://cra-ts/./src/stories/loginForm/LoginForm.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport Button from '../button/Button';\nimport InputField from '../input/InputField';\nimport './loginForm.css';\n\n\ninterface LoginFormProps {\n  onLogin: ({\n    username,\n    password,\n  }: {\n    username: string;\n    password: string;\n  }) => void;\n  title?: string;\n  errorMessage?: string;\n\n}\n\nconst LoginForm: React.FC<LoginFormProps> = ({ onLogin, title = 'Log In', errorMessage }) => {\n  const [submitted, setSubmitted] = useState(false);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleFormSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    if (username && password) {\n      onLogin({ username, password });\n    }\n    setSubmitted(true);\n  };\n\n  return (\n    <div className=\"max-w-screen-sm p-12 mx-auto bg-gray-50 rounded-md shadow-lg\">\n      <form className=\"flex flex-col\" onSubmit={handleFormSubmit}>\n        <fieldset>\n          <legend className=\"text-3xl text-gray-800 mb-4\">{title}</legend>\n\n          <InputField\n            name=\"Username\"\n            type=\"text\"\n            label=\"Username\"\n            submitted={submitted}\n            requiredMessage='Username is required'\n            onChange={(e) => setUsername(e.target.value)}\n            value={username}\n            autoComplete=\"username\"\n          />\n          <InputField\n            name=\"Password\"\n            type=\"password\"\n            label=\"Password\"\n            submitted={submitted}\n            requiredMessage='Username is required'\n            onChange={(e) => setPassword(e.target.value)}\n            value={password}\n            autoComplete=\"current-password\"\n          />\n          <Button \n          primary\n          label='LoginForm Button'\n          size = 'large'\n          backgroundColor='#1ea7fd'        \n          />\n\n          {errorMessage && (\n            <div className=\"text-red-500 mt-2\">{errorMessage}</div>\n          )}\n\n        </fieldset>\n      </form>\n    </div>\n  );\n};\n\n\nexport default LoginForm;\n"],"names":[],"sourceRoot":""}