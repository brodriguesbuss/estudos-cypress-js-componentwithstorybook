{"version":3,"file":"main.b1c6a8564f06f62d09ff.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AAEA;AAPA;;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAEA;AAAA;;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAGA;AACA;;;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAJA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA","sources":["webpack://cra-ts/./src/stories/loginForm/LoginFrom.stories.tsx"],"sourcesContent":["\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from 'react';\\nimport { ComponentStory, ComponentMeta } from '@storybook/react';\\nimport { within, userEvent } from '@storybook/testing-library';\\nimport LoginForm from './LoginForm';\\n\\n\\n\\nexport default {\\n  /* ðŸ‘‡ The title prop is optional.\\n  * See https://storybook.js.org/docs/react/configure/overview#configure-story-loading\\n  * to learn how to generate automatic titles\\n  */\\n  title: 'LoginForm',\\n  \\n  component: LoginForm\\n} as ComponentMeta<typeof LoginForm>;\\n\\nconst Template: ComponentStory<typeof LoginForm> = (args) => <LoginForm {...args} />;\\n\\nexport const Filled = Template.bind({});\\nFilled.play = async ({ canvasElement }) => {\\nconst canvas = within(canvasElement);  \\n}\\n\\n  //Caso queira mapear o click()\\n  // const loginButton = await canvas.getByRole('button', { name: /Log in/i });\\n  // await userEvent.click(loginButton);\\n\\n\\nexport const Empty = Template.bind({});\\nconst onLoginSpy = '';\\nEmpty.args = {\\nonLogin({ username, password, }) {\\n    username='onloginName'\\n    password='onlogin'\\n},\\n}\\n\\n\\n\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Filled\":{\"startLoc\":{\"col\":51,\"line\":18},\"endLoc\":{\"col\":84,\"line\":18},\"startBody\":{\"col\":51,\"line\":18},\"endBody\":{\"col\":84,\"line\":18}},\"Empty\":{\"startLoc\":{\"col\":51,\"line\":18},\"endLoc\":{\"col\":84,\"line\":18},\"startBody\":{\"col\":51,\"line\":18},\"endBody\":{\"col\":84,\"line\":18}}};\n    \nimport React from 'react';\nimport { ComponentStory, ComponentMeta } from '@storybook/react';\nimport { within, userEvent } from '@storybook/testing-library';\nimport LoginForm from './LoginForm';\n\n\n\nexport default {\n  /* ðŸ‘‡ The title prop is optional.\n  * See https://storybook.js.org/docs/react/configure/overview#configure-story-loading\n  * to learn how to generate automatic titles\n  */\n  title: 'LoginForm',\n  \n  component: LoginForm\n} as ComponentMeta<typeof LoginForm>;\n\nconst Template: ComponentStory<typeof LoginForm> = (args) => <LoginForm {...args} />;\n\nexport const Filled = Template.bind({});;\nFilled.play = async ({ canvasElement }) => {\nconst canvas = within(canvasElement);  \n}\n\n  //Caso queira mapear o click()\n  // const loginButton = await canvas.getByRole('button', { name: /Log in/i });\n  // await userEvent.click(loginButton);\n\n\nexport const Empty = Template.bind({});\nconst onLoginSpy = '';\nEmpty.args = {\nonLogin({ username, password, }) {\n    username='onloginName'\n    password='onlogin'\n},\n}\n\n\n\n\n\n\nFilled.parameters = { storySource: { source: \"(args) => <LoginForm {...args} />\" }, ...Filled.parameters };\nEmpty.parameters = { storySource: { source: \"(args) => <LoginForm {...args} />\" }, ...Empty.parameters };"],"names":[],"sourceRoot":""}