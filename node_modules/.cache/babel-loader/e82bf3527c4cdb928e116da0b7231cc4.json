{"ast":null,"code":"var _jsxFileName = \"/Users/C96363A/Automation/testing-component-with-cypress-storybook/src/stories/loginForm/LoginFrom.stories.tsx\";\n\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar __STORY__ = \"import React from 'react';\\nimport { ComponentStory, ComponentMeta } from '@storybook/react';\\nimport { LoginForm } from '../loginForm/LoginForm';\\nimport { within, userEvent } from '@storybook/testing-library';\\n\\n\\n\\nexport default {\\n  /* ðŸ‘‡ The title prop is optional.\\n  * See https://storybook.js.org/docs/react/configure/overview#configure-story-loading\\n  * to learn how to generate automatic titles\\n  */\\n  title: 'LoginForm',\\n  component: LoginForm,\\n  parameters:{\\n    layout: 'fullscreen',\\n  }\\n} as ComponentMeta<typeof LoginForm>;\\n\\n\\n\\nconst Template: ComponentStory<typeof LoginForm> = (args) => <LoginForm {...args} />;\\n\\nexport const Teste = Template.bind({});\\nTeste.play = async ({ canvasElement }) => {\\n  const canvas = within(canvasElement);\\n  const loginButton = await canvas.getByRole('button', { name: /Log in/i });\\n  await userEvent.click(loginButton);\\n};\\n\\n\"; // @ts-ignore\n\nvar __LOCATIONS_MAP__ = {\n  \"Teste\": {\n    \"startLoc\": {\n      \"col\": 51,\n      \"line\": 22\n    },\n    \"endLoc\": {\n      \"col\": 84,\n      \"line\": 22\n    },\n    \"startBody\": {\n      \"col\": 51,\n      \"line\": 22\n    },\n    \"endBody\": {\n      \"col\": 84,\n      \"line\": 22\n    }\n  }\n};\nimport React from 'react';\nimport { LoginForm } from '../loginForm/LoginForm';\nimport { within, userEvent } from '@storybook/testing-library';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default {\n  /* ðŸ‘‡ The title prop is optional.\n  * See https://storybook.js.org/docs/react/configure/overview#configure-story-loading\n  * to learn how to generate automatic titles\n  */\n  title: 'LoginForm',\n  component: LoginForm,\n  parameters: {\n    layout: 'fullscreen'\n  }\n};\n\nconst Template = args => /*#__PURE__*/_jsxDEV(LoginForm, { ...args\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 30,\n  columnNumber: 62\n}, this);\n\n_c = Template;\nexport const Teste = Template.bind({});\n\nTeste.play = async _ref => {\n  let {\n    canvasElement\n  } = _ref;\n  const canvas = within(canvasElement);\n  const loginButton = await canvas.getByRole('button', {\n    name: /Log in/i\n  });\n  await userEvent.click(loginButton);\n};\n\nTeste.parameters = {\n  storySource: {\n    source: \"(args) => <LoginForm {...args} />\"\n  },\n  ...Teste.parameters\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Template\");\nexport const __namedExportsOrder = [\"Teste\"];","map":{"version":3,"sources":["/Users/C96363A/Automation/testing-component-with-cypress-storybook/src/stories/loginForm/LoginFrom.stories.tsx"],"names":["__STORY__","__LOCATIONS_MAP__","React","LoginForm","within","userEvent","title","component","parameters","layout","Template","args","Teste","bind","play","canvasElement","canvas","loginButton","getByRole","name","click","storySource","source"],"mappings":";;AACI;AACA;AACA;AACA,IAAIA,SAAS,GAAG,i4BAAhB,C,CACA;;AACA,IAAIC,iBAAiB,GAAG;AAAC,WAAQ;AAAC,gBAAW;AAAC,aAAM,EAAP;AAAU,cAAO;AAAjB,KAAZ;AAAiC,cAAS;AAAC,aAAM,EAAP;AAAU,cAAO;AAAjB,KAA1C;AAA+D,iBAAY;AAAC,aAAM,EAAP;AAAU,cAAO;AAAjB,KAA3E;AAAgG,eAAU;AAAC,aAAM,EAAP;AAAU,cAAO;AAAjB;AAA1G;AAAT,CAAxB;AAEJ,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,SAAT,QAA0B,wBAA1B;AACA,SAASC,MAAT,EAAiBC,SAAjB,QAAkC,4BAAlC;;AAIA,eAAe;AACb;AACF;AACA;AACA;AACEC,EAAAA,KAAK,EAAE,WALM;AAMbC,EAAAA,SAAS,EAAEJ,SANE;AAObK,EAAAA,UAAU,EAAC;AACTC,IAAAA,MAAM,EAAE;AADC;AAPE,CAAf;;AAcA,MAAMC,QAA0C,GAAIC,IAAD,iBAAU,QAAC,SAAD,OAAeA;AAAf;AAAA;AAAA;AAAA;AAAA,QAA7D;;KAAMD,Q;AAEN,OAAO,MAAME,KAAK,GAAGF,QAAQ,CAACG,IAAT,CAAc,EAAd,CAAd;;AACPD,KAAK,CAACE,IAAN,GAAa,cAA6B;AAAA,MAAtB;AAAEC,IAAAA;AAAF,GAAsB;AACxC,QAAMC,MAAM,GAAGZ,MAAM,CAACW,aAAD,CAArB;AACA,QAAME,WAAW,GAAG,MAAMD,MAAM,CAACE,SAAP,CAAiB,QAAjB,EAA2B;AAAEC,IAAAA,IAAI,EAAE;AAAR,GAA3B,CAA1B;AACA,QAAMd,SAAS,CAACe,KAAV,CAAgBH,WAAhB,CAAN;AACD,CAJD;;AASAL,KAAK,CAACJ,UAAN,GAAmB;AAAEa,EAAAA,WAAW,EAAE;AAAEC,IAAAA,MAAM,EAAE;AAAV,GAAf;AAAgE,KAAGV,KAAK,CAACJ;AAAzE,CAAnB","sourcesContent":["\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from 'react';\\nimport { ComponentStory, ComponentMeta } from '@storybook/react';\\nimport { LoginForm } from '../loginForm/LoginForm';\\nimport { within, userEvent } from '@storybook/testing-library';\\n\\n\\n\\nexport default {\\n  /* ðŸ‘‡ The title prop is optional.\\n  * See https://storybook.js.org/docs/react/configure/overview#configure-story-loading\\n  * to learn how to generate automatic titles\\n  */\\n  title: 'LoginForm',\\n  component: LoginForm,\\n  parameters:{\\n    layout: 'fullscreen',\\n  }\\n} as ComponentMeta<typeof LoginForm>;\\n\\n\\n\\nconst Template: ComponentStory<typeof LoginForm> = (args) => <LoginForm {...args} />;\\n\\nexport const Teste = Template.bind({});\\nTeste.play = async ({ canvasElement }) => {\\n  const canvas = within(canvasElement);\\n  const loginButton = await canvas.getByRole('button', { name: /Log in/i });\\n  await userEvent.click(loginButton);\\n};\\n\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Teste\":{\"startLoc\":{\"col\":51,\"line\":22},\"endLoc\":{\"col\":84,\"line\":22},\"startBody\":{\"col\":51,\"line\":22},\"endBody\":{\"col\":84,\"line\":22}}};\n    \nimport React from 'react';\nimport { ComponentStory, ComponentMeta } from '@storybook/react';\nimport { LoginForm } from '../loginForm/LoginForm';\nimport { within, userEvent } from '@storybook/testing-library';\n\n\n\nexport default {\n  /* ðŸ‘‡ The title prop is optional.\n  * See https://storybook.js.org/docs/react/configure/overview#configure-story-loading\n  * to learn how to generate automatic titles\n  */\n  title: 'LoginForm',\n  component: LoginForm,\n  parameters:{\n    layout: 'fullscreen',\n  }\n} as ComponentMeta<typeof LoginForm>;\n\n\n\nconst Template: ComponentStory<typeof LoginForm> = (args) => <LoginForm {...args} />;\n\nexport const Teste = Template.bind({});\nTeste.play = async ({ canvasElement }) => {\n  const canvas = within(canvasElement);\n  const loginButton = await canvas.getByRole('button', { name: /Log in/i });\n  await userEvent.click(loginButton);\n};\n\n\n\n\nTeste.parameters = { storySource: { source: \"(args) => <LoginForm {...args} />\" }, ...Teste.parameters };"]},"metadata":{},"sourceType":"module"}