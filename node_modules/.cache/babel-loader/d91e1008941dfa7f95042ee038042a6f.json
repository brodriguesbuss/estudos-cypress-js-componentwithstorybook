{"ast":null,"code":"import _slicedToArray from\"/Users/C96363A/Automation/cypress-component-testing-apps-main/react-cra5-ts/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from'react';import Button from'./Button';import InputField from'./InputField';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var LoginForm=function LoginForm(_ref){var onLogin=_ref.onLogin,_ref$title=_ref.title,title=_ref$title===void 0?'Log In':_ref$title,errorMessage=_ref.errorMessage;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),submitted=_useState2[0],setSubmitted=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),username=_useState4[0],setUsername=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),password=_useState6[0],setPassword=_useState6[1];var handleFormSubmit=function handleFormSubmit(event){event.preventDefault();if(username&&password){onLogin({username:username,password:password});}setSubmitted(true);};return/*#__PURE__*/_jsx(\"div\",{className:\"max-w-screen-sm p-12 mx-auto bg-gray-50 rounded-md shadow-lg\",children:/*#__PURE__*/_jsx(\"form\",{className:\"flex flex-col\",onSubmit:handleFormSubmit,children:/*#__PURE__*/_jsxs(\"fieldset\",{children:[/*#__PURE__*/_jsx(\"legend\",{className:\"text-3xl text-gray-800 mb-4\",children:title}),/*#__PURE__*/_jsx(InputField,{name:\"username\",type:\"text\",label:\"Username\",submitted:submitted,requiredMessage:\"Username is required\",onChange:function onChange(e){return setUsername(e.target.value);},value:username,autoComplete:\"username\"}),/*#__PURE__*/_jsx(InputField,{name:\"password\",type:\"password\",label:\"Password\",submitted:submitted,requiredMessage:\"Password is required\",onChange:function onChange(e){return setPassword(e.target.value);},value:password,autoComplete:\"current-password\"}),/*#__PURE__*/_jsx(Button,{type:\"submit\",children:\"Login\"}),errorMessage&&/*#__PURE__*/_jsx(\"div\",{className:\"text-red-500 mt-2\",children:errorMessage})]})})});};export default LoginForm;","map":{"version":3,"sources":["/Users/C96363A/Automation/cypress-component-testing-apps-main/react-cra5-ts/src/components/LoginForm.tsx"],"names":["React","useState","Button","InputField","LoginForm","onLogin","title","errorMessage","submitted","setSubmitted","username","setUsername","password","setPassword","handleFormSubmit","event","preventDefault","e","target","value"],"mappings":"iKAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,CACA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,C,wFAcA,GAAMC,CAAAA,SAAmC,CAAG,QAAtCA,CAAAA,SAAsC,MAAiD,IAA9CC,CAAAA,OAA8C,MAA9CA,OAA8C,iBAArCC,KAAqC,CAArCA,KAAqC,qBAA7B,QAA6B,YAAnBC,YAAmB,MAAnBA,YAAmB,CAC3F,cAAkCN,QAAQ,CAAC,KAAD,CAA1C,wCAAOO,SAAP,eAAkBC,YAAlB,eACA,eAAgCR,QAAQ,CAAC,EAAD,CAAxC,yCAAOS,QAAP,eAAiBC,WAAjB,eACA,eAAgCV,QAAQ,CAAC,EAAD,CAAxC,yCAAOW,QAAP,eAAiBC,WAAjB,eAEA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,KAAD,CAA4B,CACnDA,KAAK,CAACC,cAAN,GACA,GAAIN,QAAQ,EAAIE,QAAhB,CAA0B,CACxBP,OAAO,CAAC,CAAEK,QAAQ,CAARA,QAAF,CAAYE,QAAQ,CAARA,QAAZ,CAAD,CAAP,CACD,CACDH,YAAY,CAAC,IAAD,CAAZ,CACD,CAND,CAQA,mBACE,YAAK,SAAS,CAAC,8DAAf,uBACE,aAAM,SAAS,CAAC,eAAhB,CAAgC,QAAQ,CAAEK,gBAA1C,uBACE,yCACE,eAAQ,SAAS,CAAC,6BAAlB,UAAiDR,KAAjD,EADF,cAEE,KAAC,UAAD,EACE,IAAI,CAAC,UADP,CAEE,IAAI,CAAC,MAFP,CAGE,KAAK,CAAC,UAHR,CAIE,SAAS,CAAEE,SAJb,CAKE,eAAe,CAAC,sBALlB,CAME,QAAQ,CAAE,kBAACS,CAAD,QAAON,CAAAA,WAAW,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAAlB,EANZ,CAOE,KAAK,CAAET,QAPT,CAQE,YAAY,CAAC,UARf,EAFF,cAYE,KAAC,UAAD,EACE,IAAI,CAAC,UADP,CAEE,IAAI,CAAC,UAFP,CAGE,KAAK,CAAC,UAHR,CAIE,SAAS,CAAEF,SAJb,CAKE,eAAe,CAAC,sBALlB,CAME,QAAQ,CAAE,kBAACS,CAAD,QAAOJ,CAAAA,WAAW,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAlB,EANZ,CAOE,KAAK,CAAEP,QAPT,CAQE,YAAY,CAAC,kBARf,EAZF,cAsBE,KAAC,MAAD,EAAQ,IAAI,CAAC,QAAb,mBAtBF,CAuBGL,YAAY,eACX,YAAK,SAAS,CAAC,mBAAf,UAAoCA,YAApC,EAxBJ,GADF,EADF,EADF,CAiCD,CA9CD,CAgDA,cAAeH,CAAAA,SAAf","sourcesContent":["import React, { useState } from 'react';\nimport Button from './Button';\nimport InputField from './InputField';\n\ninterface LoginFormProps {\n  onLogin: ({\n    username,\n    password,\n  }: {\n    username: string;\n    password: string;\n  }) => void;\n  title?: string;\n  errorMessage?: string;\n}\n\nconst LoginForm: React.FC<LoginFormProps> = ({ onLogin, title = 'Log In', errorMessage }) => {\n  const [submitted, setSubmitted] = useState(false);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleFormSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    if (username && password) {\n      onLogin({ username, password });\n    }\n    setSubmitted(true);\n  };\n\n  return (\n    <div className=\"max-w-screen-sm p-12 mx-auto bg-gray-50 rounded-md shadow-lg\">\n      <form className=\"flex flex-col\" onSubmit={handleFormSubmit}>\n        <fieldset>\n          <legend className=\"text-3xl text-gray-800 mb-4\">{title}</legend>\n          <InputField\n            name=\"username\"\n            type=\"text\"\n            label=\"Username\"\n            submitted={submitted}\n            requiredMessage=\"Username is required\"\n            onChange={(e) => setUsername(e.target.value)}\n            value={username}\n            autoComplete=\"username\"\n          />\n          <InputField\n            name=\"password\"\n            type=\"password\"\n            label=\"Password\"\n            submitted={submitted}\n            requiredMessage=\"Password is required\"\n            onChange={(e) => setPassword(e.target.value)}\n            value={password}\n            autoComplete=\"current-password\"\n          />\n          <Button type=\"submit\">Login</Button>\n          {errorMessage && (\n            <div className=\"text-red-500 mt-2\">{errorMessage}</div>\n          )}\n        </fieldset>\n      </form>\n    </div>\n  );\n};\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}