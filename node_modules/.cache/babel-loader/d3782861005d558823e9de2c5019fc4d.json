{"ast":null,"code":"var _jsxFileName = \"/Users/C96363A/Automation/testing-component-with-cypress-storybook/src/stories/loginForm/LoginFrom.stories.tsx\";\n\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar __STORY__ = \"import React from 'react';\\nimport { ComponentStory, ComponentMeta } from '@storybook/react';\\nimport { within, userEvent } from '@storybook/testing-library';\\nimport LoginForm from './LoginForm';\\n\\n\\n\\nexport default {\\n  /* ðŸ‘‡ The title prop is optional.\\n  * See https://storybook.js.org/docs/react/configure/overview#configure-story-loading\\n  * to learn how to generate automatic titles\\n  */\\n  title: 'LoginForm',\\n  \\n  component: LoginForm\\n} as ComponentMeta<typeof LoginForm>;\\n\\nconst Template: ComponentStory<typeof LoginForm> = (args) => <LoginForm {...args} />;\\n\\nexport const Filled = Template.bind({});\\nFilled.play = async ({ canvasElement }) => {\\nconst canvas = within(canvasElement);  \\n  const loginButton = await canvas.getByRole('button', { name: /Log in/i });\\n  await userEvent.click(loginButton);\\n}\\n\\n\\n  //Caso queira mapear o click()\\n  // const loginButton = await canvas.getByRole('button', { name: /Log in/i });\\n  // await userEvent.click(loginButton);\\n\\n\\n\\n\\n\"; // @ts-ignore\n\nvar __LOCATIONS_MAP__ = {\n  \"Filled\": {\n    \"startLoc\": {\n      \"col\": 51,\n      \"line\": 18\n    },\n    \"endLoc\": {\n      \"col\": 84,\n      \"line\": 18\n    },\n    \"startBody\": {\n      \"col\": 51,\n      \"line\": 18\n    },\n    \"endBody\": {\n      \"col\": 84,\n      \"line\": 18\n    }\n  }\n};\nimport React from 'react';\nimport { within, userEvent } from '@storybook/testing-library';\nimport LoginForm from './LoginForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default {\n  /* ðŸ‘‡ The title prop is optional.\n  * See https://storybook.js.org/docs/react/configure/overview#configure-story-loading\n  * to learn how to generate automatic titles\n  */\n  title: 'LoginForm',\n  component: LoginForm\n};\n\nconst Template = args => /*#__PURE__*/_jsxDEV(LoginForm, { ...args\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 26,\n  columnNumber: 62\n}, this);\n\n_c = Template;\nexport const Filled = Template.bind({});\n\nFilled.play = async _ref => {\n  let {\n    canvasElement\n  } = _ref;\n  const canvas = within(canvasElement);\n  const loginButton = await canvas.getByRole('button', {\n    name: /Log in/i\n  });\n  await userEvent.click(loginButton);\n}; //Caso queira mapear o click()\n// const loginButton = await canvas.getByRole('button', { name: /Log in/i });\n// await userEvent.click(loginButton);\n\n\nFilled.parameters = {\n  storySource: {\n    source: \"(args) => <LoginForm {...args} />\"\n  },\n  ...Filled.parameters\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Template\");\nexport const __namedExportsOrder = [\"Filled\"];","map":{"version":3,"sources":["/Users/C96363A/Automation/testing-component-with-cypress-storybook/src/stories/loginForm/LoginFrom.stories.tsx"],"names":["__STORY__","__LOCATIONS_MAP__","React","within","userEvent","LoginForm","title","component","Template","args","Filled","bind","play","canvasElement","canvas","loginButton","getByRole","name","click","parameters","storySource","source"],"mappings":";;AACI;AACA;AACA;AACA,IAAIA,SAAS,GAAG,y+BAAhB,C,CACA;;AACA,IAAIC,iBAAiB,GAAG;AAAC,YAAS;AAAC,gBAAW;AAAC,aAAM,EAAP;AAAU,cAAO;AAAjB,KAAZ;AAAiC,cAAS;AAAC,aAAM,EAAP;AAAU,cAAO;AAAjB,KAA1C;AAA+D,iBAAY;AAAC,aAAM,EAAP;AAAU,cAAO;AAAjB,KAA3E;AAAgG,eAAU;AAAC,aAAM,EAAP;AAAU,cAAO;AAAjB;AAA1G;AAAV,CAAxB;AAEJ,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,MAAT,EAAiBC,SAAjB,QAAkC,4BAAlC;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAIA,eAAe;AACb;AACF;AACA;AACA;AACEC,EAAAA,KAAK,EAAE,WALM;AAObC,EAAAA,SAAS,EAAEF;AAPE,CAAf;;AAUA,MAAMG,QAA0C,GAAIC,IAAD,iBAAU,QAAC,SAAD,OAAeA;AAAf;AAAA;AAAA;AAAA;AAAA,QAA7D;;KAAMD,Q;AAEN,OAAO,MAAME,MAAM,GAAGF,QAAQ,CAACG,IAAT,CAAc,EAAd,CAAf;;AACPD,MAAM,CAACE,IAAP,GAAc,cAA6B;AAAA,MAAtB;AAAEC,IAAAA;AAAF,GAAsB;AAC3C,QAAMC,MAAM,GAAGX,MAAM,CAACU,aAAD,CAArB;AACE,QAAME,WAAW,GAAG,MAAMD,MAAM,CAACE,SAAP,CAAiB,QAAjB,EAA2B;AAAEC,IAAAA,IAAI,EAAE;AAAR,GAA3B,CAA1B;AACA,QAAMb,SAAS,CAACc,KAAV,CAAgBH,WAAhB,CAAN;AACD,CAJD,C,CAOE;AACA;AACA;;;AAQFL,MAAM,CAACS,UAAP,GAAoB;AAAEC,EAAAA,WAAW,EAAE;AAAEC,IAAAA,MAAM,EAAE;AAAV,GAAf;AAAgE,KAAGX,MAAM,CAACS;AAA1E,CAApB","sourcesContent":["\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from 'react';\\nimport { ComponentStory, ComponentMeta } from '@storybook/react';\\nimport { within, userEvent } from '@storybook/testing-library';\\nimport LoginForm from './LoginForm';\\n\\n\\n\\nexport default {\\n  /* ðŸ‘‡ The title prop is optional.\\n  * See https://storybook.js.org/docs/react/configure/overview#configure-story-loading\\n  * to learn how to generate automatic titles\\n  */\\n  title: 'LoginForm',\\n  \\n  component: LoginForm\\n} as ComponentMeta<typeof LoginForm>;\\n\\nconst Template: ComponentStory<typeof LoginForm> = (args) => <LoginForm {...args} />;\\n\\nexport const Filled = Template.bind({});\\nFilled.play = async ({ canvasElement }) => {\\nconst canvas = within(canvasElement);  \\n  const loginButton = await canvas.getByRole('button', { name: /Log in/i });\\n  await userEvent.click(loginButton);\\n}\\n\\n\\n  //Caso queira mapear o click()\\n  // const loginButton = await canvas.getByRole('button', { name: /Log in/i });\\n  // await userEvent.click(loginButton);\\n\\n\\n\\n\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Filled\":{\"startLoc\":{\"col\":51,\"line\":18},\"endLoc\":{\"col\":84,\"line\":18},\"startBody\":{\"col\":51,\"line\":18},\"endBody\":{\"col\":84,\"line\":18}}};\n    \nimport React from 'react';\nimport { ComponentStory, ComponentMeta } from '@storybook/react';\nimport { within, userEvent } from '@storybook/testing-library';\nimport LoginForm from './LoginForm';\n\n\n\nexport default {\n  /* ðŸ‘‡ The title prop is optional.\n  * See https://storybook.js.org/docs/react/configure/overview#configure-story-loading\n  * to learn how to generate automatic titles\n  */\n  title: 'LoginForm',\n  \n  component: LoginForm\n} as ComponentMeta<typeof LoginForm>;\n\nconst Template: ComponentStory<typeof LoginForm> = (args) => <LoginForm {...args} />;\n\nexport const Filled = Template.bind({});\nFilled.play = async ({ canvasElement }) => {\nconst canvas = within(canvasElement);  \n  const loginButton = await canvas.getByRole('button', { name: /Log in/i });\n  await userEvent.click(loginButton);\n}\n\n\n  //Caso queira mapear o click()\n  // const loginButton = await canvas.getByRole('button', { name: /Log in/i });\n  // await userEvent.click(loginButton);\n\n\n\n\n\n\n\nFilled.parameters = { storySource: { source: \"(args) => <LoginForm {...args} />\" }, ...Filled.parameters };"]},"metadata":{},"sourceType":"module"}