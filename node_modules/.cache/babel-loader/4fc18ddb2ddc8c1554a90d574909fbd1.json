{"ast":null,"code":"var _jsxFileName = \"/Users/C96363A/Automation/testing-component-with-cypress-storybook/src/stories/loginForm/LoginForm.tsx\";\nimport React, { useState } from 'react';\nimport Buttontwo from '../button--two/Buttontwo';\nimport InputField from '../input/InputField';\nimport './loginForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginForm = ({\n  onLogin,\n  title = 'Log In',\n  errorMessage\n}) => {\n  const [submitted, setSubmitted] = useState(false);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleFormSubmit = event => {\n    event.preventDefault();\n\n    if (username && password) {\n      onLogin({\n        username,\n        password\n      });\n    }\n\n    setSubmitted(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-screen-sm p-12 mx-auto bg-gray-50 rounded-md shadow-lg\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"flex flex-col\",\n      onSubmit: handleFormSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n          className: \"text-3xl text-gray-800 mb-4\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputField, {\n          name: \"username\",\n          type: \"text\",\n          label: \"Username\",\n          submitted: submitted,\n          requiredMessage: \"Username is required\",\n          onChange: e => setUsername(e.target.value),\n          value: username,\n          autoComplete: \"username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputField, {\n          name: \"password\",\n          type: \"password\",\n          label: \"Password\",\n          submitted: submitted,\n          requiredMessage: \"Password is required\",\n          onChange: e => setPassword(e.target.value),\n          value: password,\n          autoComplete: \"current-password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Buttontwo, {\n          type: \"submit\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-red-500 mt-2\",\n          children: errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\nexport default LoginForm;","map":{"version":3,"sources":["/Users/C96363A/Automation/testing-component-with-cypress-storybook/src/stories/loginForm/LoginForm.tsx"],"names":["React","useState","Buttontwo","InputField","LoginForm","onLogin","title","errorMessage","submitted","setSubmitted","username","setUsername","password","setPassword","handleFormSubmit","event","preventDefault","e","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AAEA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAO,iBAAP;;;AAgBA,MAAMC,SAAmC,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,KAAK,GAAG,QAAnB;AAA6BC,EAAAA;AAA7B,CAAD,KAAiD;AAC3F,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAMa,gBAAgB,GAAIC,KAAD,IAA4B;AACnDA,IAAAA,KAAK,CAACC,cAAN;;AACA,QAAIN,QAAQ,IAAIE,QAAhB,EAA0B;AACxBP,MAAAA,OAAO,CAAC;AAAEK,QAAAA,QAAF;AAAYE,QAAAA;AAAZ,OAAD,CAAP;AACD;;AACDH,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,GAND;;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,8DAAf;AAAA,2BACE;AAAM,MAAA,SAAS,EAAC,eAAhB;AAAgC,MAAA,QAAQ,EAAEK,gBAA1C;AAAA,6BACE;AAAA,gCACE;AAAQ,UAAA,SAAS,EAAC,6BAAlB;AAAA,oBAAiDR;AAAjD;AAAA;AAAA;AAAA;AAAA,gBADF,eAGE,QAAC,UAAD;AACE,UAAA,IAAI,EAAC,UADP;AAEE,UAAA,IAAI,EAAC,MAFP;AAGE,UAAA,KAAK,EAAC,UAHR;AAIE,UAAA,SAAS,EAAEE,SAJb;AAKE,UAAA,eAAe,EAAC,sBALlB;AAME,UAAA,QAAQ,EAAGS,CAAD,IAAON,WAAW,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAN9B;AAOE,UAAA,KAAK,EAAET,QAPT;AAQE,UAAA,YAAY,EAAC;AARf;AAAA;AAAA;AAAA;AAAA,gBAHF,eAaE,QAAC,UAAD;AACE,UAAA,IAAI,EAAC,UADP;AAEE,UAAA,IAAI,EAAC,UAFP;AAGE,UAAA,KAAK,EAAC,UAHR;AAIE,UAAA,SAAS,EAAEF,SAJb;AAKE,UAAA,eAAe,EAAC,sBALlB;AAME,UAAA,QAAQ,EAAGS,CAAD,IAAOJ,WAAW,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAN9B;AAOE,UAAA,KAAK,EAAEP,QAPT;AAQE,UAAA,YAAY,EAAC;AARf;AAAA;AAAA;AAAA;AAAA,gBAbF,eAuBE,QAAC,SAAD;AAAW,UAAA,IAAI,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAvBF,EA0BGL,YAAY,iBACX;AAAK,UAAA,SAAS,EAAC,mBAAf;AAAA,oBAAoCA;AAApC;AAAA;AAAA;AAAA;AAAA,gBA3BJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAqCD,CAlDD;;AAqDA,eAAeH,SAAf","sourcesContent":["import React, { useState } from 'react';\nimport Buttontwo from '../button--two/Buttontwo';\nimport Button from '../button/Button';\nimport InputField from '../input/InputField';\nimport './loginForm.css';\n\n\ninterface LoginFormProps {\n  onLogin: ({\n    username,\n    password,\n  }: {\n    username: string;\n    password: string;\n  }) => void;\n  title?: string;\n  errorMessage?: string;\n\n}\n\nconst LoginForm: React.FC<LoginFormProps> = ({ onLogin, title = 'Log In', errorMessage }) => {\n  const [submitted, setSubmitted] = useState(false);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleFormSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    if (username && password) {\n      onLogin({ username, password });\n    }\n    setSubmitted(true);\n  };\n\n  return (\n    <div className=\"max-w-screen-sm p-12 mx-auto bg-gray-50 rounded-md shadow-lg\">\n      <form className=\"flex flex-col\" onSubmit={handleFormSubmit}>\n        <fieldset>\n          <legend className=\"text-3xl text-gray-800 mb-4\">{title}</legend>\n\n          <InputField\n            name=\"username\"\n            type=\"text\"\n            label=\"Username\"\n            submitted={submitted}\n            requiredMessage='Username is required'\n            onChange={(e) => setUsername(e.target.value)}\n            value={username}\n            autoComplete=\"username\"\n          />\n          <InputField\n            name=\"password\"\n            type=\"password\"\n            label=\"Password\"\n            submitted={submitted}\n            requiredMessage='Password is required'\n            onChange={(e) => setPassword(e.target.value)}\n            value={password}\n            autoComplete=\"current-password\"\n          />\n          <Buttontwo type=\"submit\">Login</Buttontwo>\n      \n\n          {errorMessage && (\n            <div className=\"text-red-500 mt-2\">{errorMessage}</div>\n          )}\n\n        </fieldset>\n      </form>\n    </div>\n  );\n};\n\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}