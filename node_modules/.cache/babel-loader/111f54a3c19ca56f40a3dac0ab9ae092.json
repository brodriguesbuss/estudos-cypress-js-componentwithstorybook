{"ast":null,"code":"var _jsxFileName = \"/Users/C96363A/Automation/testing-component-with-cypress-storybook/src/App.tsx\";\nimport { useState } from 'react';\nimport LoginForm from './components/LoginForm';\nimport Welcome from './components/Welcome';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  const [isAuthed, setIsAuthed] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [username, setUsername] = useState('');\n\n  const handleLogin = async creds => {\n    try {\n      setErrorMessage('');\n      const res = await fetch('/auth', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(creds)\n      });\n\n      if (res.status === 200) {\n        setIsAuthed(true);\n        setUsername(creds.username);\n      } else {\n        if (res.status === 401) {\n          const {\n            message\n          } = await res.json();\n          setErrorMessage(message);\n        } else {\n          throw Error(`error during auth, status code: ${res.status}`);\n        }\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"lg:container lg mx-auto m-10\",\n    children: isAuthed ? /*#__PURE__*/_jsxDEV(Welcome, {\n      username: username,\n      onLogout: () => {\n        setIsAuthed(false);\n        setUsername('');\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(LoginForm, {\n      onLogin: handleLogin,\n      errorMessage: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/C96363A/Automation/testing-component-with-cypress-storybook/src/App.tsx"],"names":["useState","LoginForm","Welcome","App","isAuthed","setIsAuthed","errorMessage","setErrorMessage","username","setUsername","handleLogin","creds","res","fetch","method","headers","body","JSON","stringify","status","message","json","Error","e","console","error"],"mappings":";AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,OAAP,MAAoB,sBAApB;;;AAEA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACM,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAMU,WAAW,GAAG,MAAOC,KAAP,IAAyD;AAC3E,QAAI;AACFJ,MAAAA,eAAe,CAAC,EAAD,CAAf;AACA,YAAMK,GAAG,GAAG,MAAMC,KAAK,CAAC,OAAD,EAAU;AAC/BC,QAAAA,MAAM,EAAE,MADuB;AAE/BC,QAAAA,OAAO,EAAE;AAAE,0BAAgB;AAAlB,SAFsB;AAG/BC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,KAAf;AAHyB,OAAV,CAAvB;;AAKA,UAAIC,GAAG,CAACO,MAAJ,KAAe,GAAnB,EAAwB;AACtBd,QAAAA,WAAW,CAAC,IAAD,CAAX;AACAI,QAAAA,WAAW,CAACE,KAAK,CAACH,QAAP,CAAX;AACD,OAHD,MAGO;AACL,YAAII,GAAG,CAACO,MAAJ,KAAe,GAAnB,EAAwB;AACtB,gBAAM;AAAEC,YAAAA;AAAF,cAAc,MAAMR,GAAG,CAACS,IAAJ,EAA1B;AACAd,UAAAA,eAAe,CAACa,OAAD,CAAf;AACD,SAHD,MAGO;AACL,gBAAME,KAAK,CAAE,mCAAkCV,GAAG,CAACO,MAAO,EAA/C,CAAX;AACD;AACF;AACF,KAlBD,CAkBE,OAAOI,CAAP,EAAU;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACD;AACF,GAtBD;;AAwBA,sBACE;AAAK,IAAA,SAAS,EAAC,8BAAf;AAAA,cACGnB,QAAQ,gBACP,QAAC,OAAD;AACE,MAAA,QAAQ,EAAEI,QADZ;AAEE,MAAA,QAAQ,EAAE,MAAM;AACdH,QAAAA,WAAW,CAAC,KAAD,CAAX;AACAI,QAAAA,WAAW,CAAC,EAAD,CAAX;AACD;AALH;AAAA;AAAA;AAAA;AAAA,YADO,gBASP,QAAC,SAAD;AAAW,MAAA,OAAO,EAAEC,WAApB;AAAiC,MAAA,YAAY,EAAEJ;AAA/C;AAAA;AAAA;AAAA;AAAA;AAVJ;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;AAED,eAAeH,GAAf","sourcesContent":["import { useState } from 'react';\nimport LoginForm from './components/LoginForm';\nimport Welcome from './components/Welcome';\n\nfunction App() {\n  const [isAuthed, setIsAuthed] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [username, setUsername] = useState('');\n\n  const handleLogin = async (creds: { username: string; password: string }) => {\n    try {\n      setErrorMessage('');\n      const res = await fetch('/auth', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(creds),\n      });\n      if (res.status === 200) {\n        setIsAuthed(true);\n        setUsername(creds.username);\n      } else {\n        if (res.status === 401) {\n          const { message } = await res.json();\n          setErrorMessage(message);\n        } else {\n          throw Error(`error during auth, status code: ${res.status}`);\n        }\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  return (\n    <div className=\"lg:container lg mx-auto m-10\">\n      {isAuthed ? (\n        <Welcome\n          username={username}\n          onLogout={() => {\n            setIsAuthed(false);\n            setUsername('');\n          }}\n        />\n      ) : (\n        <LoginForm onLogin={handleLogin} errorMessage={errorMessage} />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}