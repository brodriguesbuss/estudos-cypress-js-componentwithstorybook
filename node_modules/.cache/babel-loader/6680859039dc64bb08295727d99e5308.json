{"ast":null,"code":"var _jsxFileName = \"/Users/C96363A/Automation/testing-component-with-cypress-storybook/src/stories/button/Button.tsx\";\nimport React from 'react';\nimport '../button/button.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Button = props => {\n  const {\n    className,\n    children,\n    primary,\n    backgroundColor,\n    size,\n    label,\n    ...rest\n  } = props;\n  const mode = primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    type: \"button\",\n    className: ['storybook-button', `storybook-button--${size}`, mode].join(' '),\n    style: {\n      backgroundColor\n    },\n    ...props,\n    children: [label, children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Button;\nexport default Button;\n\nvar _c;\n\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"sources":["/Users/C96363A/Automation/testing-component-with-cypress-storybook/src/stories/button/Button.tsx"],"names":["React","Button","props","className","children","primary","backgroundColor","size","label","rest","mode","join"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,sBAAP;;;AA4CA,MAAMC,MAA6B,GAAIC,KAAD,IAAW;AAC/C,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,QAAb;AAAsBC,IAAAA,OAAtB;AAA+BC,IAAAA,eAA/B;AAAgDC,IAAAA,IAAhD;AAAqDC,IAAAA,KAArD;AAA4D,OAAGC;AAA/D,MAAwEP,KAA9E;AAEA,QAAMQ,IAAI,GAAGL,OAAO,GAAG,2BAAH,GAAiC,6BAArD;AACA,sBACE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAE,CAAC,kBAAD,EAAsB,qBAAoBE,IAAK,EAA/C,EAAkDG,IAAlD,EAAwDC,IAAxD,CAA6D,GAA7D,CAFb;AAGE,IAAA,KAAK,EAAE;AAAEL,MAAAA;AAAF,KAHT;AAAA,OAIMJ,KAJN;AAAA,eAMGM,KANH,EAQGJ,QARH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAjBD;;KAAMH,M;AAmBN,eAAeA,MAAf","sourcesContent":["import React from 'react';\nimport '../button/button.css'\n\ninterface ButtonProps {\n  /**\n   * Is this the principal call to action on the page?\n   */\n  primary?: boolean;\n  /**\n   * What background color to use\n   */\n  backgroundColor?: string;\n  /**\n   * How large should the button be?\n   */\n  size?: 'small' | 'medium' | 'large';\n  /**\n   * Button contents\n   */\n  label: string;\n  /**\n   * Optional click handler\n   */\n  onClick?: () => void;\n\n}\n\n/**\n * Primary UI component for user interaction\n */\n// export const Button = ({\n//   primary = false,\n//   size = 'medium',\n//   backgroundColor, \n//   label,\n//   ...props\n// }: ButtonProps): JSX.Element => {\n\ninterface ButtonProps\n  extends React.DetailedHTMLProps<\n      React.ButtonHTMLAttributes<HTMLButtonElement>,\n      HTMLButtonElement\n    >,\n    React.AriaAttributes {}\n\nconst Button: React.FC<ButtonProps> = (props) => {\n  const { className, children,primary, backgroundColor, size,label, ...rest } = props;\n\n  const mode = primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n  return (\n    <button\n      type=\"button\"\n      className={['storybook-button', `storybook-button--${size}`, mode].join(' ')}\n      style={{ backgroundColor }}\n      {...props}\n    >\n      {label}\n   \n      {children}\n\n    </button>\n  );\n};\n\nexport default Button;\n\n"]},"metadata":{},"sourceType":"module"}